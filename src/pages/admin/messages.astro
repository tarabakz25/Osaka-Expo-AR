import Layout from "../../layouts/Layout.astro";
import { getAllMessages, getMessagesByProject } from '../../db/messages.js';
import { projects } from '../../data/projects.js';

// メッセージの取得
let messages = [];
let selectedProject = Astro.url.searchParams.get('project');

try {
  if (selectedProject !== null) {
    messages = getMessagesByProject(selectedProject);
  } else {
    messages = getAllMessages();
  }
} catch (error) {
  console.error('メッセージの取得に失敗しました:', error);
}

<Layout>
  <div class="admin-container">
    <h1>メッセージ管理</h1>
    
    <div class="filter-controls">
      <h2>プロジェクトでフィルター</h2>
      <div class="filter-buttons">
        <a href="/admin/messages" class={selectedProject === null ? 'active' : ''}>すべて</a>
        {projects.map((project, index) => (
          <a href={`/admin/messages?project=${index}`} class={selectedProject === index.toString() ? 'active' : ''}>
            {project.name}
          </a>
        ))}
      </div>
    </div>
    
    <div class="messages-list">
      <h2>メッセージ一覧</h2>
      {messages.length === 0 ? (
        <p class="no-messages">メッセージがありません</p>
      ) : (
        <div class="message-cards">
          {messages.map((message) => (
            <div class="message-card">
              <div class="message-header">
                <div class="message-project">{message.project_name}</div>
                <div class="message-sender">{message.sender_name}</div>
                <div class="message-date">{new Date(message.timestamp).toLocaleString('ja-JP')}</div>
              </div>
              <div class="message-content">{message.message}</div>
            </div>
          ))}
        </div>
      )}
    </div>
  </div>
</Layout>

<style>
  .admin-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 2rem;
  }
  
  h1 {
    text-align: center;
    margin-bottom: 2rem;
  }
  
  .filter-controls {
    margin-bottom: 2rem;
    background-color: #f5f5f5;
    padding: 1rem;
    border-radius: 0.5rem;
  }
  
  .filter-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }
  
  .filter-buttons a {
    padding: 0.5rem 1rem;
    background-color: #e0e0e0;
    border-radius: 0.25rem;
    text-decoration: none;
    color: #333;
  }
  
  .filter-buttons a.active {
    background-color: #4A7CE0;
    color: white;
  }
  
  .messages-list {
    margin-top: 2rem;
  }
  
  .no-messages {
    text-align: center;
    padding: 2rem;
    background-color: #f5f5f5;
    border-radius: 0.5rem;
  }
  
  .message-cards {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
  }
  
  .message-card {
    background-color: white;
    border-radius: 0.5rem;
    padding: 1rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .message-header {
    margin-bottom: 0.5rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid #eee;
  }
  
  .message-project {
    font-weight: bold;
    color: #4A7CE0;
  }
  
  .message-sender {
    font-size: 0.9rem;
    margin-top: 0.25rem;
  }
  
  .message-date {
    font-size: 0.8rem;
    color: #666;
    margin-top: 0.25rem;
  }
  
  .message-content {
    white-space: pre-wrap;
    line-height: 1.5;
  }
</style> 