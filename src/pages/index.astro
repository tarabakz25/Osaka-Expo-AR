---
import Layout from "../layouts/Layout.astro"
import { Image } from "astro:assets"
import KamiyamaLogo from "../assets/Kamiyama_Logo.svg"
import '../styles/global.css'

import BusinessCard from "../components/BusinessCard.astro"
import { projects } from '../data/projects.js'

// プロジェクト配列をシャッフル
// for (let i = projects.length - 1; i > 0; i--) {
// 	const j = Math.floor(Math.random() * (i + 1));
// 	[projects[i], projects[j]] = [projects[j], projects[i]];
// }
---

<Layout>
	<div id="particles-js" class="particles-container"></div>
	<!-- 言語切り替えボタン -->
	<div class="language-switcher">
		<button id="langJa" class="lang-btn active">日本語</button>
		<button id="langEn" class="lang-btn">English</button>
	</div>
	<div class="landing-page">
		<div class="landing-content">
			<div class="logo-container">
				<Image src={KamiyamaLogo} alt="Kamiyama Logo" class="kamiyama-logo" />
			</div>
			<h1 class="welcome-title" id="welcomeTitle">大阪・関西万博徳島パビリオン 神山まるごと高専エリアへようこそ</h1>
			<button class="start-button" id="startButton">次へ</button>
		</div>
	</div>
	<div class="explain_text-page" id="explainPage">
		<div class="explain-content">
			<h2 id="explainTitle">このプロジェクトは？</h2>
			<p id="explainText1">ここでは、私たち神山まるごと高専生がARを通じて、神山まるごと高専の今を伝えるためのプロジェクトです。</p>
			<p id="explainText2">目の前にあるマネキンにかざして、実際に神山まるごと高専の"今"を体験してみましょう。</p>
			<button class="ar-button" id="toSelectPage">次へ</button>
		</div>
	</div>
</Layout>

<style>
	body {
		margin: 0;
		padding: 0;
		overflow: hidden;
		box-sizing: border-box;
	}
	
	.particles-container {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 1;
		background: linear-gradient(45deg, #2B4798, #4A7CE0, #1C52B7, #6A9DFF);
		background-size: 300% 300%;
		animation: gradient 10s ease-in-out infinite alternate;
	}
	
	@keyframes gradient {
		0% {
			background-position: 0% 0%;
		}
		25% {
			background-position: 50% 50%;
		}
		50% {
			background-position: 100% 100%;
		}
		75% {
			background-position: 50% 50%;
		}
		100% {
			background-position: 0% 0%;
		}
	}
	
	.landing-page {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100vh;
		display: flex;
		justify-content: center;
		align-items: center;
		z-index: 2;
		background-color: transparent;
	}
	
	.landing-content {
		text-align: center;
		padding: 1rem;
		width: 90%;
		max-width: 500px;
		font-family: var(--default-font);
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
	}
	
	.logo-container {
		margin-bottom: 1.5rem;
		width: 100%;
		text-align: center;
	}
	
	.landing-content .kamiyama-logo {
		width: 100%;
		max-width: 400px;
		height: auto;
		margin: 0 auto;
		filter: invert(100%);
	}
	
	.welcome-title {
		font-size: 1.3rem;
		margin: 1rem 0 1.5rem 0;
		text-align: center;
		width: 100%;
		word-break: keep-all;
		overflow-wrap: break-word;
		color: var(--text-color-white);
		padding: 10px;
		border-radius: 8px;
	}
	
	.start-button {
		font-family: var(--default-font-english);
		color: white;
		border: none;
		padding: 0.8rem 2rem;
		font-size: 1rem;
		border-radius: 25px;
		cursor: pointer;
		transition: all 0.3s;
		display: inline-block;
		text-decoration: none;
		margin-top: 0.5rem;
		background-color: rgba(255, 255, 255, 0.1);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
	}
	
	.start-button:hover {
		background-color: var(--accent-color);
		opacity: 0.9;
	}

	/* 言語切り替えボタンのスタイル */
	.language-switcher {
		position: fixed;
		top: 20px;
		right: 20px;
		z-index: 100;
		display: flex;
		border-radius: 25px;
		overflow: hidden;
		background-color: rgba(255, 255, 255, 0.2);
		backdrop-filter: blur(5px);
		-webkit-backdrop-filter: blur(5px);
	}

	.lang-btn {
		padding: 8px 15px;
		border: none;
		background: transparent;
		color: white;
		cursor: pointer;
		font-family: var(--default-font);
		transition: background-color 0.3s;
	}

	.lang-btn.active {
		background-color: rgba(255, 255, 255, 0.3);
		font-weight: bold;
	}

	.lang-btn:hover {
		background-color: rgba(255, 255, 255, 0.4);
	}
	
	.hidden {
		display: none !important;
	}
	
	.explain_text-page {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100vh;
		display: none;
		justify-content: center;
		align-items: center;
		z-index: 3;
		padding: 1rem;
		box-sizing: border-box;
	}
	
	.explain-content {
		text-align: center;
		width: 100%;
		max-width: 600px;
		background-color: rgba(255, 255, 255, 0.1);
		backdrop-filter: blur(10px);
		-webkit-backdrop-filter: blur(10px);
		padding: 2rem;
		border-radius: 1rem;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
		color: var(--text-color-white);
	}
	
	.ar-button {
		background-color: var(--accent-color);
		color: white;
		border: none;
		padding: 0.8rem 2rem;
		font-size: 1rem;
		border-radius: 25px;
		cursor: pointer;
		transition: all 0.3s;
		display: inline-block;
		text-decoration: none;
		margin-top: 1.5rem;
	}
	
	.ar-button:hover {
		background-color: var(--accent-color-dark);
	}
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // 言語切り替え用のテキスト定義
    const translations = {
      ja: {
        welcomeTitle: '大阪・関西万博徳島パビリオン 神山まるごと高専エリアへようこそ',
        startButton: '次へ',
        explainTitle: 'このプロジェクトは？',
        explainText1: 'ここでは、私たち神山まるごと高専生がARを通じて、神山まるごと高専の今を伝えるためのプロジェクトです。',
        explainText2: '目の前にあるマネキンにかざして、実際に神山まるごと高専の"今"を体験してみましょう。',
        toSelectPage: '次へ'
      },
      en: {
        welcomeTitle: 'Welcome to Kamiyama KOSEN Area, Tokushima Pavilion, Osaka-Kansai Expo',
        startButton: 'Next',
        explainTitle: 'About This Project',
        explainText1: 'This is a project where we, students of Kamiyama KOSEN, share our current activities through AR technology.',
        explainText2: 'Hold your device up to the mannequin in front of you to experience the current state of Kamiyama KOSEN.',
        toSelectPage: 'Next'
      }
    };

    // 言語切り替えボタンの要素を取得
    const langJaBtn = document.getElementById('langJa');
    const langEnBtn = document.getElementById('langEn');
    
    // ページ内の変更対象要素を取得
    const welcomeTitle = document.getElementById('welcomeTitle');
    const startBtn = document.getElementById('startButton');
    const explainTitle = document.getElementById('explainTitle');
    const explainText1 = document.getElementById('explainText1');
    const explainText2 = document.getElementById('explainText2');
    const toSelectPageBtn = document.getElementById('toSelectPage');
    
    // 言語を切り替える関数
    function switchLanguage(lang) {
      // nullチェック
      if (!langJaBtn || !langEnBtn || !welcomeTitle || !startBtn || 
          !explainTitle || !explainText1 || !explainText2 || !toSelectPageBtn) {
        console.error('一部の要素が見つかりません');
        return;
      }
      
      // 言語ボタンのアクティブ状態を切り替え
      if (lang === 'ja') {
        langJaBtn.classList.add('active');
        langEnBtn.classList.remove('active');
      } else {
        langJaBtn.classList.remove('active');
        langEnBtn.classList.add('active');
      }
      
      // テキストを更新
      welcomeTitle.textContent = translations[lang].welcomeTitle;
      startBtn.textContent = translations[lang].startButton;
      explainTitle.textContent = translations[lang].explainTitle;
      explainText1.textContent = translations[lang].explainText1;
      explainText2.textContent = translations[lang].explainText2;
      toSelectPageBtn.textContent = translations[lang].toSelectPage;
      
      // 現在の言語をローカルストレージに保存
      localStorage.setItem('preferredLanguage', lang);
    }
    
    // 言語ボタンのクリックイベント
    if (langJaBtn && langEnBtn) {
      langJaBtn.addEventListener('click', () => switchLanguage('ja'));
      langEnBtn.addEventListener('click', () => switchLanguage('en'));
    }
    
    // ページ読み込み時に保存された言語設定を適用
    const savedLang = localStorage.getItem('preferredLanguage');
    if (savedLang) {
      switchLanguage(savedLang);
    }
    
    // ページ遷移のイベント登録
    const landingPage = document.querySelector('.landing-page');
    const explainPage = document.getElementById('explainPage');
    
    // 「次へ」ボタンがクリックされたら説明ページを表示
    if (startBtn && landingPage && explainPage) {
      startBtn.addEventListener('click', () => {
        landingPage.classList.add('hidden');
        explainPage.style.display = 'flex';
      });
    }
    
    // 「次へ」ボタンがクリックされたらAR体験へ
    if (toSelectPageBtn && explainPage) {
      toSelectPageBtn.addEventListener('click', () => {
        explainPage.style.display = 'none';
        // AR体験ページへリダイレクト
        window.location.href = '/ar';
      });
    }
  });
</script>

<script is:inline src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>

<script is:inline>
	window.onload = function() {
		particlesJS("particles-js", {
		  "particles": {
			"number": {
			  "value": 100,
			  "density": {
				"enable": true,
				"value_area": 800
			  }
			},
			"color": {
			  "value": "#A5DFFF"
			},
			"shape": {
			  "type": "circle",
			  "stroke": {
				"width": 0,
				"color": "#A5DFFF"
			  }
			},
			"opacity": {
			  "value": 0.8,
			  "random": true
			},
			"size": {
			  "value": 5,
			  "random": true
			},
			"line_linked": {
			  "enable": false,
			  "distance": 150,
			  "color": "#888888",
			  "opacity": 0.6,
			  "width": 1
			},
			"move": {
			  "enable": true,
			  "speed": 1,
			  "direction": "top",
			  "random": true,
			  "straight": false
			}
		  },
		  "interactivity": {
			"detect_on": "canvas",
			"events": {
			  "onhover": {
				"enable": true,
				"mode": "repulse"
			  },
			  "onclick": {
				"enable": true,
				"mode": "push"
			  },
			  "resize": true
			}
		  },
		  "retina_detect": true
		});
	}
</script>