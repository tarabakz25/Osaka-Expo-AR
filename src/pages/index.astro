---
import Layout from "../layouts/Layout.astro"
import { Image } from "astro:assets"
import KamiyamaLogo from "../assets/Kamiyama_Logo.svg"
import '../styles/global.css'
import BusinessCard from "../components/BusinessCard.astro"
import { projects } from '../data/projects.js'
---

<Layout>
	<!-- パーティクル背景 -->
	<div id="particles-js" class="fixed top-0 left-0 w-full h-full z-[1] bg-gradient-to-br from-primary-blue-600 via-primary-blue-800 via-primary-blue-700 to-primary-blue-900 animate-gradient" style="background-size: 300% 300%;"></div>
	
	<!-- 波紋エフェクト用の要素 -->
	<div id="ripple-effect" class="fixed top-0 left-0 w-full h-full z-[90] bg-transparent pointer-events-none"></div>
	
	<!-- 言語切り替えボタン -->
	<div class="fixed top-5 right-5 z-[1000]">
		<button id="langSwitch" class="bg-white/20 text-white border border-white/50 rounded-full px-4 py-2 text-sm cursor-pointer transition-all duration-300 backdrop-blur-sm hover:bg-white/30">
			<span id="langText">English</span>
		</button>
	</div>
	
	<div class="fixed top-0 left-0 w-full h-screen flex justify-center items-center z-[2] bg-transparent transition-opacity duration-[1500ms]" id="landingPage">
		<div class="text-center p-4 w-[90%] max-w-md md:max-w-[800px] flex flex-col justify-center items-center relative z-[95] bg-transparent rounded-[10px] mx-auto">
			<div class="mb-6 w-full text-center opacity-0 animate-dissolve" style="animation-delay: 0s;">
				<Image src={KamiyamaLogo} alt="Kamiyama Logo" class="w-full max-w-[280px] md:max-w-[400px] h-auto mx-auto block invert" />
			</div>
			<h1 class="text-xl md:text-2xl mx-0 my-4 text-center w-full break-keep px-2.5 py-2.5 rounded-lg text-white opacity-0 animate-dissolve shadow-lg" style="animation-delay: 0.5s; text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);">「泉」に触れる</h1>
			<h1 class="text-xl md:text-2xl mx-0 my-4 text-center w-full break-keep px-2.5 py-2.5 rounded-lg text-white opacity-0 animate-dissolve shadow-lg" style="animation-delay: 1s; text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);">Touch the "spring"</h1>
		</div>
	</div>
	
	<div class="fixed top-0 left-0 w-full h-screen flex justify-center items-center z-0 opacity-0 invisible transition-all duration-1000 bg-black/20 backdrop-blur-sm" id="explainPage">
		<div class="text-center p-6 md:p-8 w-[85%] md:w-[90%] max-w-[600px] backdrop-blur-[10px] rounded-[15px] text-text-white">
			<h2 class="text-base md:text-lg mb-4" data-ja="体験手順" data-en="How to Experience">体験手順</h2>
			<p class="text-sm md:text-base mb-4 leading-relaxed" data-ja="1,ブラウザ上で名刺をスライドし、コンテンツを選択してください" data-en="1. Slide the business cards in the browser and select content">1,ブラウザ上で名刺をスライドし、コンテンツを選択してください</p>
			<p class="text-sm md:text-base mb-4 leading-relaxed" data-ja="2,カメラの使用を許可し、マネキン頭上のマーカーを読み取ってください。※この際、真上から覗き込むのではなく、画面上の白い枠にマーカーが合うようスマホを立てて読み取ってください。" data-en="2. Allow camera use and scan the marker on the mannequin head. Note: Don't look directly from above, but hold your smartphone upright so the marker fits in the white frame on the screen.">2,カメラの使用を許可し、マネキン頭上のマーカーを読み取ってください。※この際、真上から覗き込むのではなく、画面上の白い枠にマーカーが合うようスマホを立てて読み取ってください。</p>
			<p class="text-sm md:text-base mb-4 leading-relaxed" data-ja="3,コンテンツ終了後、感想・コメントを入力してください" data-en="3. After the content ends, please enter your impressions and comments">3,コンテンツ終了後、感想・コメントを入力してください</p>
		</div>
	</div>
	
	<div class="fixed top-0 left-0 w-full h-screen flex justify-center items-center z-0 opacity-0 invisible transition-all duration-1000 bg-gray-900/20 overflow-hidden" id="movieSelectPage">
		<div class="w-full max-w-full h-full flex flex-col justify-start pt-8 md:pt-[3vh] items-center text-center px-2 py-6 md:py-8 text-text-white relative">
			<h2 class="text-lg md:text-xl mt-6 md:mt-8 mb-6 md:mb-8 text-white" data-ja="プロジェクト紹介" data-en="Project Introduction">プロジェクト紹介</h2>
			<div class="relative w-full max-w-[500px] flex flex-col justify-start items-center touch-pan-y overflow-y-auto overflow-x-hidden h-[55vh] md:h-[60vh] max-h-[400px] md:max-h-[500px] scrollbar-hide">
				<div class="w-full relative min-h-full touch-pan-y select-none grid grid-cols-2 auto-rows-[minmax(80px,auto)] md:auto-rows-[minmax(100px,auto)] gap-1.5 md:gap-2 px-2 md:px-2.5 py-10 md:py-12 pb-16 md:pb-20 items-start justify-items-center" id="cardsGrid">
					{projects.map((project, index) => (
						<div class="card-item w-full max-w-[80px] md:max-w-[100px] h-auto flex justify-center items-center transition-all duration-300 opacity-100 transform scale-[0.7] md:scale-75 cursor-pointer mb-0.5 hover:opacity-100 hover:scale-[0.8] md:hover:scale-90" data-index={index}>
							<BusinessCard
								name={project.name}
								romaji={project.romaji}
								keyword={project.keyword}
							/>
						</div>
					))}
				</div>
			</div>
			<div class="mt-6 md:mt-7 mb-3 md:mb-4 text-xs md:text-sm text-white/70 text-center animate-pulse-custom" data-ja="スクロールしてすべてのプロジェクトを見る" data-en="Scroll to see all projects">スクロールしてすべてのプロジェクトを見る</div>
			<p class="tap-hint inline-block bg-transparent mt-3 md:mt-4 mb-6 md:mb-7 text-xs md:text-sm text-white text-center backdrop-blur-none" data-ja="カードをタップして選択" data-en="Tap a card to select">カードをタップして選択</p>
		</div>
	</div>
</Layout>

<!-- jQuery と ripples プラグインの読み込み -->
<script is:inline src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/jquery.ripples@0.6.3/dist/jquery.ripples.min.js"></script>
<script is:inline src="https://cdn.jsdelivr.net/npm/particles.js@2.0.0/particles.min.js"></script>

<style>
	/* カスタム背景グラデーション用アニメーション */
	@keyframes gradient {
		0% { background-position: 0% 0%; }
		25% { background-position: 50% 50%; }
		50% { background-position: 100% 100%; }
		75% { background-position: 50% 50%; }
		100% { background-position: 0% 0%; }
	}

	/* ディゾルブアニメーション */
	@keyframes dissolve-in {
		0% { opacity: 0; }
		100% { opacity: 1; }
	}

	/* ページ遷移アニメーション */
	.fade-out {
		opacity: 0 !important;
		pointer-events: none;
	}

	.fade-in {
		opacity: 1 !important;
		visibility: visible !important;
		z-index: 3 !important;
	}
</style>

<script is:inline define:vars={{ projects }}>
	// Fisher-Yates (Knuth) Shuffle アルゴリズム
	function shuffleArray(array) {
		for (let i = array.length - 1; i > 0; i--) {
			const j = Math.floor(Math.random() * (i + 1));
			[array[i], array[j]] = [array[j], array[i]];
		}
	}

	window.onload = function() {
		// ページ読み込み時にプロジェクト配列をシャッフル
		shuffleArray(projects);

		// パーティクルJS初期化
		particlesJS("particles-js", {
		  "particles": {
			"number": {
			  "value": 100,
			  "density": {
				"enable": true,
				"value_area": 800
			  }
			},
			"color": {
			  "value": "#6FB8E3"
			},
			"shape": {
			  "type": "circle",
			  "stroke": {
				"width": 0,
				"color": "#6FB8E3"
			  }
			},
			"opacity": {
			  "value": 0.5,
			  "random": true
			},
			"size": {
			  "value": 5,
			  "random": true
			},
			"line_linked": {
			  "enable": false,
			  "distance": 150,
			  "color": "#888888",
			  "opacity": 0.6,
			  "width": 1
			},
			"move": {
			  "enable": true,
			  "speed": 0.5,
			  "direction": "top",
			  "random": true,
			  "straight": false
			}
		  },
		  "interactivity": {
			"detect_on": "canvas",
			"events": {
			  "onhover": {
				"enable": true,
				"mode": "repulse"
			  },
			  "onclick": {
				"enable": true,
				"mode": "push"
			  },
			  "resize": true
			}
		  },
		  "retina_detect": true
		});
		
		// jQuery.ripples の初期化
		try {
			$('#ripple-effect').ripples({
				resolution: 500, 
				dropRadius: 20,
				perturbance: 0.15
			});
			
			// 自動で波紋を発生させる（初期表示用）
			setTimeout(function() {
				const centerX = $('#ripple-effect').width() / 2;
				const centerY = $('#ripple-effect').height() / 2;
				
				$('#ripple-effect').ripples('drop', centerX, centerY, 20, 0.25);
				setTimeout(function() {$('#ripple-effect').ripples('drop', centerX, centerY, 20, 0.25);}, 300);
				setTimeout(function() {$('#ripple-effect').ripples('drop', centerX, centerY, 20, 0.25);}, 600);
			}, 300);
		} catch (e) {
			console.error('Wave effects not supported by browser:', e);
		}

		// ページ切り替え用の要素
		const landingPage = document.getElementById('landingPage');
		const explainPage = document.getElementById('explainPage');
		const movieSelectPage = document.getElementById('movieSelectPage');
		
		// 自動遷移のタイミング設定（ミリ秒）
		const timings = {
			landing: 500,
			explain: 3000
		};
		
		// ページ遷移関数
		function transitionToExplain() {
			console.log("説明ページへ遷移します");
			landingPage.classList.add('fade-out');
			explainPage.classList.add('fade-in');
			
			setTimeout(transitionToMovieSelect, timings.explain);
		}
		
		function transitionToMovieSelect() {
			console.log("動画選択ページへ遷移します");
			explainPage.classList.remove('fade-in');
			explainPage.classList.add('fade-out');
			movieSelectPage.classList.add('fade-in');
			
			initializeGrid();
		}
		
		const totalAnimationTime = 5000;
		setTimeout(transitionToExplain, totalAnimationTime + timings.landing);
		
		// カードアイテムとグリッドの要素
		const cardItems = document.querySelectorAll('.card-item');
		const cardsGrid = document.getElementById('cardsGrid');
		
		// カードアイテムをタップしたときの処理
		function handleCardTap(index) {
			console.log("カードがタップされました:", index);
			console.log("選択されたプロジェクト:", projects[index]);
			
			sessionStorage.setItem('selectedProject', index);
			console.log("sessionStorageに保存しました", sessionStorage.getItem('selectedProject'));
			
			setTimeout(() => {
				window.location.href = "/ar";
			}, 100);
		}
		
		// 各カードアイテムにクリックイベントを追加
		cardItems.forEach((item, index) => {
			item.addEventListener('click', function() {
				handleCardTap(index);
			});
		});
		
		// すべてのカードを表示
		function initializeGrid() {
			cardItems.forEach((item) => {
				item.style.display = 'flex';
				item.classList.add('active');
			});
		}
		
		console.log("初期化中:", { 
			items: cardItems.length
		});
		
		initializeGrid();

		// 言語切り替え機能
		const langButton = document.getElementById('langSwitch');
		const langText = document.getElementById('langText');
		let currentLang = localStorage.getItem('language') || 'ja';
		
		applyLanguage(currentLang);
		
		if (langButton) {
			langButton.addEventListener('click', function() {
				currentLang = currentLang === 'ja' ? 'en' : 'ja';
				localStorage.setItem('language', currentLang);
				applyLanguage(currentLang);
			});
		}
		
		// 言語設定を適用する関数
		function applyLanguage(lang) {
			if (langText) {
				langText.textContent = lang === 'ja' ? 'English' : '日本語';
			}
			
			document.querySelectorAll('[data-ja][data-en]').forEach(element => {
				element.textContent = element.getAttribute(`data-${lang}`);
			});
		}

		// 波紋エフェクトの後にディゾルブアニメーションを開始
		setTimeout(() => {
			document.querySelectorAll('.animate-dissolve').forEach(element => {
				element.style.animationPlayState = 'running';
			});
		}, 2000);
	};
</script>